services:
  app:
    image: nodejs
    container_name: app
    entrypoint: wait-for rabbitmq:5672 -t 15 -- npm run dev
    restart: unless-stopped
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development 
    ports:
      - "${STDOUT_PORT_API}:${PORT_API}"
      - "${PORT_PRISMA}:${PORT_PRISMA}"
      - "${STDOUT_PORT_WS_SERVER}:${PORT_WS_SERVER}"
    volumes:
      - .:/home/node/app
      - ./node_modules:/home/node/app/node_modules
    depends_on:
      db:
        condition: service_healthy

  db:
    image: bitnami/postgresql:latest
    container_name: db
    restart: always
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    environment:
      - POSTGRESQL_DATABASE=${DB_DATABASE}
      - POSTGRESQL_USERNAME=${DB_USERNAME}
      - POSTGRESQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - .docker/postgres_data:/bitnami/postgresql/data:rw
    ports:
      - "${STDOUT_DB_PORT}:5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "${PORT_PGADMIN}:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - .docker/pgadmin_data:/var/lib/pgadmin

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
    ports:
      - "${PORT_RABBITMQ}:5672"
      - "${PORT_RABBITMQ_MANAGEMENT}:15672"
    volumes:
      - .docker/rabbitmq/data:/var/lib/rabbitmq
      - .docker/rabbitmq/log:/var/log/rabbitmq
